
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import { Wrench, RefreshCw, Package, Cpu, HardDrive, Activity, Download } from 'lucide-react';
import { useSecurity } from '../../contexts/SecurityContext';
import { useToast } from '@/hooks/use-toast';

const MaintenancePanel: React.FC = () => {
  const { updateDependencies } = useSecurity();
  const { toast } = useToast();
  const [isUpdating, setIsUpdating] = useState(false);
  const [systemMetrics, setSystemMetrics] = useState({
    cpuUsage: 0,
    memoryUsage: 0,
    diskUsage: 0,
    networkActivity: 0
  });

  useEffect(() => {
    const updateMetrics = () => {
      setSystemMetrics({
        cpuUsage: Math.random() * 100,
        memoryUsage: Math.random() * 100,
        diskUsage: Math.random() * 100,
        networkActivity: Math.random() * 100
      });
    };

    updateMetrics();
    const interval = setInterval(updateMetrics, 5000);
    return () => clearInterval(interval);
  }, []);

  const handleDependencyUpdate = async () => {
    setIsUpdating(true);
    try {
      await updateDependencies();
      toast({
        title: "Dependencies Updated",
        description: "All dependencies have been updated successfully.",
      });
    } catch (error) {
      toast({
        title: "Update Failed",
        description: "Failed to update dependencies. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsUpdating(false);
    }
  };

  const runSystemCleanup = async () => {
    toast({
      title: "Cleanup Started",
      description: "System cleanup is running in the background.",
    });

    // Simulate cleanup process
    setTimeout(() => {
      toast({
        title: "Cleanup Complete",
        description: "System cleanup finished successfully.",
      });
    }, 3000);
  };

  const optimizePerformance = async () => {
    toast({
      title: "Optimization Started",
      description: "Performance optimization is running.",
    });

    // Simulate optimization process
    setTimeout(() => {
      toast({
        title: "Optimization Complete",
        description: "System performance has been optimized.",
      });
    }, 4000);
  };

  const downloadMaintenanceReport = () => {
    const report = `
Maintenance Report - ${new Date().toLocaleDateString()}

System Metrics:
- CPU Usage: ${systemMetrics.cpuUsage.toFixed(1)}%
- Memory Usage: ${systemMetrics.memoryUsage.toFixed(1)}%
- Disk Usage: ${systemMetrics.diskUsage.toFixed(1)}%
- Network Activity: ${systemMetrics.networkActivity.toFixed(1)}%

Recent Activities:
- Last dependency update: ${new Date().toLocaleDateString()}
- System cleanup: Complete
- Performance optimization: Complete

Recommendations:
- Monitor CPU usage if consistently above 80%
- Consider memory upgrade if usage exceeds 90%
- Schedule regular maintenance tasks
- Keep dependencies updated monthly

Generated by Security & Maintenance Dashboard
    `;

    const blob = new Blob([report], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `maintenance-report-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Report Downloaded",
      description: "Maintenance report has been downloaded.",
    });
  };

  return (
    <div className="space-y-6 animate-fade-in">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-4xl font-bold text-foreground mb-2">Maintenance Panel</h1>
          <p className="text-muted-foreground">System optimization and maintenance tools</p>
        </div>
        <Button onClick={downloadMaintenanceReport} className="flex items-center gap-2">
          <Download className="w-4 h-4" />
          Download Report
        </Button>
      </div>

      <Tabs defaultValue="overview" className="space-y-4">
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="overview">Overview</TabsTrigger>
          <TabsTrigger value="dependencies">Dependencies</TabsTrigger>
          <TabsTrigger value="performance">Performance</TabsTrigger>
          <TabsTrigger value="automation">Automation</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <Card className="panel">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center gap-2 text-sm">
                  <Cpu className="w-4 h-4" />
                  CPU Usage
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{systemMetrics.cpuUsage.toFixed(1)}%</div>
                <Progress value={systemMetrics.cpuUsage} className="mt-2" />
              </CardContent>
            </Card>

            <Card className="panel">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center gap-2 text-sm">
                  <HardDrive className="w-4 h-4" />
                  Memory Usage
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{systemMetrics.memoryUsage.toFixed(1)}%</div>
                <Progress value={systemMetrics.memoryUsage} className="mt-2" />
              </CardContent>
            </Card>

            <Card className="panel">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center gap-2 text-sm">
                  <HardDrive className="w-4 h-4" />
                  Disk Usage
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{systemMetrics.diskUsage.toFixed(1)}%</div>
                <Progress value={systemMetrics.diskUsage} className="mt-2" />
              </CardContent>
            </Card>

            <Card className="panel">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center gap-2 text-sm">
                  <Activity className="w-4 h-4" />
                  Network
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{systemMetrics.networkActivity.toFixed(1)}%</div>
                <Progress value={systemMetrics.networkActivity} className="mt-2" />
              </CardContent>
            </Card>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <Card className="panel">
              <CardHeader>
                <CardTitle>Quick Actions</CardTitle>
              </CardHeader>
              <CardContent className="space-y-2">
                <Button onClick={runSystemCleanup} className="w-full">
                  <Wrench className="w-4 h-4 mr-2" />
                  System Cleanup
                </Button>
                <Button onClick={optimizePerformance} className="w-full">
                  <RefreshCw className="w-4 h-4 mr-2" />
                  Optimize Performance
                </Button>
                <Button onClick={handleDependencyUpdate} disabled={isUpdating} className="w-full">
                  <Package className="w-4 h-4 mr-2" />
                  {isUpdating ? 'Updating...' : 'Update Dependencies'}
                </Button>
              </CardContent>
            </Card>

            <Card className="panel">
              <CardHeader>
                <CardTitle>System Health</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span>Overall Status</span>
                    <Badge variant="default">Healthy</Badge>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>Last Maintenance</span>
                    <span className="text-sm text-muted-foreground">2 hours ago</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>Uptime</span>
                    <span className="text-sm text-muted-foreground">5 days, 12h</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="panel">
              <CardHeader>
                <CardTitle>Scheduled Tasks</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex items-center justify-between text-sm">
                    <span>Daily Cleanup</span>
                    <Badge variant="outline">00:00</Badge>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span>Weekly Backup</span>
                    <Badge variant="outline">Sunday</Badge>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span>Monthly Updates</span>
                    <Badge variant="outline">1st</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="dependencies">
          <Card className="panel">
            <CardHeader>
              <CardTitle>Dependency Management</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center justify-between p-4 bg-background/50 rounded-lg">
                  <div>
                    <h4 className="font-medium">Package Updates Available</h4>
                    <p className="text-sm text-muted-foreground">8 packages can be updated</p>
                  </div>
                  <Button onClick={handleDependencyUpdate} disabled={isUpdating}>
                    {isUpdating ? 'Updating...' : 'Update All'}
                  </Button>
                </div>
                <div className="space-y-2">
                  {[
                    { name: 'react', current: '18.2.0', latest: '18.3.1', security: false },
                    { name: 'typescript', current: '5.0.2', latest: '5.3.3', security: false },
                    { name: 'lodash', current: '4.17.20', latest: '4.17.21', security: true },
                  ].map((pkg) => (
                    <div key={pkg.name} className="flex items-center justify-between p-3 border rounded-lg">
                      <div>
                        <span className="font-medium">{pkg.name}</span>
                        <span className="text-sm text-muted-foreground ml-2">
                          {pkg.current} → {pkg.latest}
                        </span>
                      </div>
                      <div className="flex items-center gap-2">
                        {pkg.security && <Badge variant="destructive">Security</Badge>}
                        <Button size="sm" variant="outline">Update</Button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="performance">
          <Card className="panel">
            <CardHeader>
              <CardTitle>Performance Monitoring</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <h4 className="font-medium mb-2">Response Times</h4>
                    <div className="space-y-2">
                      <div className="flex justify-between">
                        <span>API Calls</span>
                        <span className="text-green-500">125ms avg</span>
                      </div>
                      <div className="flex justify-between">
                        <span>Page Load</span>
                        <span className="text-green-500">0.8s avg</span>
                      </div>
                      <div className="flex justify-between">
                        <span>Database</span>
                        <span className="text-yellow-500">45ms avg</span>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-medium mb-2">Optimization Status</h4>
                    <div className="space-y-2">
                      <div className="flex justify-between">
                        <span>Code Minification</span>
                        <Badge variant="default">Enabled</Badge>
                      </div>
                      <div className="flex justify-between">
                        <span>Gzip Compression</span>
                        <Badge variant="default">Enabled</Badge>
                      </div>
                      <div className="flex justify-between">
                        <span>Caching</span>
                        <Badge variant="outline">Disabled</Badge>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="automation">
          <Card className="panel">
            <CardHeader>
              <CardTitle>Automated Maintenance</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="p-4 bg-background/50 rounded-lg">
                  <h4 className="font-medium mb-2">Scheduled Maintenance Tasks</h4>
                  <div className="space-y-2">
                    <div className="flex items-center justify-between">
                      <span>Automatic dependency updates</span>
                      <Badge variant="default">Weekly</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>System cleanup</span>
                      <Badge variant="default">Daily</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>Performance optimization</span>
                      <Badge variant="outline">Manual</Badge>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default MaintenancePanel;
